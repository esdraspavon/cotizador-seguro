{"version":3,"sources":["components/Header.js","components/Form.js","helper.js","components/Summary.js","components/Result.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","Form","marcaRef","React","createRef","yearRef","planBasicoRef","planCopmletoRef","handleSubmit","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","cotizarSeguro","onSubmit","this","name","ref","type","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Summary","mostrarResumen","_this$props$data","data","Result","result","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","App","state","results","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incremetoPlan","obtenerPlan","parseFloat","toFixed","setState","components_Header","components_Form","components_Summary","components_Result","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOASeA,EAPA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAChBH,EAAAC,EAAAC,cAAA,UAAKH,EAAMK,SCiFFC,6MAlFbC,SAAWC,IAAMC,cACjBC,QAAUF,IAAMC,cAChBE,cAAgBH,IAAMC,cACtBG,gBAAkBJ,IAAMC,cAExBI,aAAe,SAAAC,GACbA,EAAEC,iBAGF,IAAMC,EAAOC,EAAKN,cAAcO,QAAQC,QAAU,SAAW,WAMvDC,EAAW,CACfC,MAAOJ,EAAKV,SAASW,QAAQI,MAC7BC,KAAMN,EAAKP,QAAQQ,QAAQI,MAC3BN,KAAMA,GAKRC,EAAKjB,MAAMwB,cAAcJ,4EAMzB,OACEnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeqB,SAAUC,KAAKb,cAC5CZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,QAAQC,IAAKF,KAAKnB,UAC7BN,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,aAAd,aACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,WAAd,WACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,YAAd,cAIJrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQwB,KAAK,OAAOC,IAAKF,KAAKhB,SAC5BT,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,QACArB,EAAAC,EAAAC,cAAA,UAAQmB,MAAM,QAAd,UAGJrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACE0B,KAAK,QACLF,KAAK,OACLC,IAAKF,KAAKf,cACVW,MAAM,WACL,IAPL,YASErB,EAAAC,EAAAC,cAAA,SACE0B,KAAK,QACLF,KAAK,OACLC,IAAKF,KAAKd,gBACVU,MAAM,aACL,IAdL,YAkBArB,EAAAC,EAAAC,cAAA,UAAQ0B,KAAK,SAASzB,UAAU,SAAhC,mBA5EW0B,aCwBZ,SAASC,EAAiBC,GAC/B,OAAOA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,OCNtCC,6MAjBbC,eAAiB,WAAM,IAAAC,EACSrB,EAAKjB,MAAMuC,KAAjClB,EADaiB,EACbjB,MAAOE,EADMe,EACNf,KAAMP,EADAsB,EACAtB,KACrB,OAAKK,GAAUE,GAASP,EAEtBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,oBAAY4B,EAAiBV,IAC7BpB,EAAAC,EAAAC,cAAA,mBAAW4B,EAAiBf,IAC5Bf,EAAAC,EAAAC,cAAA,qBAAUoB,IANuB,8EAWrC,OAAOtB,EAAAC,EAAAC,cAAA,WAAMuB,KAAKW,yBAdAP,oBCsBPU,mLApBX,IAAMC,EAASf,KAAK1B,MAAMyC,OACpBC,EAAWD,EAEb,gBADA,yCAEJ,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZsC,EACDzC,EAAAC,EAAAC,cAACwC,EAAA,gBAAD,CAAiBC,UAAU,OAAOxC,UAAU,aAC1CH,EAAAC,EAAAC,cAACwC,EAAA,cAAD,CACEE,WAAW,YACXC,IAAKL,EACLM,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7BhD,EAAAC,EAAAC,cAAA,YAAOsC,aAfEX,aCsDNoB,6MAjDbC,MAAQ,CACNC,QAAS,GACTb,KAAM,MAGRf,cAAgB,SAAAe,GAAQ,IACdlB,EAAsBkB,EAAtBlB,MAAOL,EAAeuB,EAAfvB,KAGXyB,EAAS,IAMbA,GAAwB,EHvBrB,SAA+BlB,GACpC,OAAO,IAAI8B,MAAOC,cAAgB/B,EGmBbgC,CANWhB,EAAThB,MASOkB,EAAU,IAGtCA,EHtBG,SAAuBe,GAC5B,IAAIC,EAEJ,OAAQD,GACN,IAAK,UACHC,EAAa,IACb,MACF,IAAK,YACHA,EAAa,KACb,MACF,IAAK,WACHA,EAAa,KAMjB,OAAOA,EGKIC,CAAcrC,GAASoB,EAIhC,IAAIkB,EHPD,SAAqB3C,GAC1B,MAAgB,WAATA,EAAoB,IAAM,IGMX4C,CAAY5C,GAGhCyB,EAASoB,WAAWF,EAAgBlB,GAAQqB,QAAQ,GAGpD7C,EAAK8C,SAAS,CACZtB,SACAF,kFAKF,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC6D,EAAD,CAAQ3D,MAAM,gCACdJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAC8D,EAAD,CAAMzC,cAAeE,KAAKF,gBAC1BvB,EAAAC,EAAAC,cAAC+D,EAAD,CAAS3B,KAAMb,KAAKyB,MAAMZ,KAAME,OAAQf,KAAKyB,MAAMV,SAEnDxC,EAAAC,EAAAC,cAACgE,EAAD,CAAQ1B,OAAQf,KAAKyB,MAAMV,kBA3CnBX,aCKEsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2c292900.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <header className=\"top\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  //refs son para leer los valores de los campos de un formulario\r\n  marcaRef = React.createRef();\r\n  yearRef = React.createRef();\r\n  planBasicoRef = React.createRef();\r\n  planCopmletoRef = React.createRef();\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    //leer plan\r\n    const plan = this.planBasicoRef.current.checked ? \"basico\" : \"completo\";\r\n\r\n    //Obtener los datos\r\n    //console.log(this.marcaRef.current.value);\r\n\r\n    // crear el objeto\r\n    const infoAuto = {\r\n      marca: this.marcaRef.current.value,\r\n      year: this.yearRef.current.value,\r\n      plan: plan\r\n    };\r\n    //console.log(infoAuto);\r\n\r\n    //enviar al componente principal\r\n    this.props.cotizarSeguro(infoAuto);\r\n\r\n    //Resetear el formulario\r\n    //e.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"cotizar-auto\" onSubmit={this.handleSubmit}>\r\n        <div className=\"campo\">\r\n          <label>Marca</label>\r\n          <select name=\"marca\" ref={this.marcaRef}>\r\n            <option value=\"americano\">Americano</option>\r\n            <option value=\"europeo\">Europeo</option>\r\n            <option value=\"asiatico\">Asiatico</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>A침o</label>\r\n          <select name=\"year\" ref={this.yearRef}>\r\n            <option value=\"2018\">2018</option>\r\n            <option value=\"2017\">2017</option>\r\n            <option value=\"2016\">2016</option>\r\n            <option value=\"2015\">2015</option>\r\n            <option value=\"2014\">2014</option>\r\n            <option value=\"2013\">2013</option>\r\n            <option value=\"2012\">2012</option>\r\n            <option value=\"2011\">2011</option>\r\n            <option value=\"2010\">2010</option>\r\n            <option value=\"2009\">2009</option>\r\n            <option value=\"2008\">2008</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"campo\">\r\n          <label>Plan:</label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"plan\"\r\n            ref={this.planBasicoRef}\r\n            value=\"basico\"\r\n          />{\" \"}\r\n          B치sico\r\n          <input\r\n            type=\"radio\"\r\n            name=\"plan\"\r\n            ref={this.planCopmletoRef}\r\n            value=\"completo\"\r\n          />{\" \"}\r\n          Completo\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"boton\">\r\n          Cotizar\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","export function obtenerDiferenciaAnio(year) {\r\n  return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calcularMarca(modelo) {\r\n  let incremento;\r\n\r\n  switch (modelo) {\r\n    case \"europeo\":\r\n      incremento = 1.3;\r\n      break;\r\n    case \"americano\":\r\n      incremento = 1.15;\r\n      break;\r\n    case \"asiatico\":\r\n      incremento = 1.05;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return incremento;\r\n}\r\nexport function obtenerPlan(plan) {\r\n  return plan === \"basico\" ? 1.2 : 1.5;\r\n}\r\nexport function primeraMayuscula(texto) {\r\n  return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { primeraMayuscula } from \"../helper\";\r\n\r\nclass Summary extends Component {\r\n  mostrarResumen = () => {\r\n    const { marca, year, plan } = this.props.data;\r\n    if (!marca && !year && !plan) return null;\r\n    return (\r\n      <div className=\"resumen\">\r\n        <h2>Resumen de cotizacion</h2>\r\n        <li>Marca: {primeraMayuscula(marca)}</li>\r\n        <li>Plan: {primeraMayuscula(plan)}</li>\r\n        <li>A침o: {year}</li>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return <div>{this.mostrarResumen()}</div>;\r\n  }\r\n}\r\n\r\nexport default Summary;\r\n","import React, { Component } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Result extends Component {\r\n  render() {\r\n    const result = this.props.result;\r\n    const mensaje = !result\r\n      ? \"Elije marca, a침o, y tipo de seguro.\"\r\n      : \"El total es: \";\r\n    return (\r\n      <div className=\"gran-total\">\r\n        {mensaje}\r\n        <TransitionGroup component=\"span\" className=\"resultado\">\r\n          <CSSTransition\r\n            classNames=\"resultado\"\r\n            key={result}\r\n            timeout={{ enter: 500, exit: 500 }}\r\n          >\r\n            <span>{result}</span>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Result;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Form from \"./Form\";\r\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from \"../helper\";\r\nimport Summary from \"./Summary\";\r\nimport Result from \"./Result\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    results: \"\",\r\n    data: {}\r\n  };\r\n\r\n  cotizarSeguro = data => {\r\n    const { marca, plan, year } = data;\r\n\r\n    //Agregar una base de 2000\r\n    let result = 2000;\r\n\r\n    //Obtener la diferencia de a침os y\r\n    const diferencia = obtenerDiferenciaAnio(year);\r\n\r\n    //por cada a침o restar el 3%\r\n    result -= (diferencia * 3 * result) / 100;\r\n\r\n    // Americano 15% Asiatico 5% y Eurepoeo 30% de incremento al valor actual\r\n    result = calcularMarca(marca) * result;\r\n\r\n    //el plan del auto, el b치sico incrementa el valor 20%\r\n    //y cobertura completa 50%\r\n    let incremetoPlan = obtenerPlan(plan);\r\n\r\n    //Dependiendo del plan icrementar\r\n    result = parseFloat(incremetoPlan * result).toFixed(2);\r\n\r\n    //A침adiendo el resultado al state\r\n    this.setState({\r\n      result,\r\n      data\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contenedor\">\r\n        <Header title=\"Cotizador de seguro de auto\" />\r\n        <div className=\"contenedor-formulario\">\r\n          <Form cotizarSeguro={this.cotizarSeguro} />\r\n          <Summary data={this.state.data} result={this.state.result} />\r\n\r\n          <Result result={this.state.result} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}